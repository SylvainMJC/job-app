name: CI/CD Pipeline Alternative

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x ./backend/gradlew
    
    - name: Build with Gradle
      run: cd backend && ./gradlew build
    
    - name: Run tests
      run: cd backend && ./gradlew test
    
    - name: Generate JaCoCo report
      run: cd backend && ./gradlew jacocoTestReport
    
    - name: JaCoCo Coverage Report
      if: github.event_name == 'pull_request'
      uses: ./.github/actions/jacoco-report
      with:
        jacoco-path: backend/build/reports/jacoco/test/jacocoTestReport.xml
        github-token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: '70'
        min-coverage-changed: '80'
    
    - name: Archive JaCoCo report
      run: |
        mkdir -p artifacts
        cp -r backend/build/reports/jacoco/* artifacts/
        echo "JaCoCo report archived in artifacts directory"
    
    # Setup Node.js pour le frontend
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
    
    - name: Install frontend dependencies
      run: cd frontend && npm install
    
    - name: Build frontend
      run: cd frontend && npm run build
    
    # Optionnel: Tests frontend
    # - name: Test frontend
    #   run: cd frontend && npm test

  # Ajout d'un job pour déployer lorsque c'est sur la branche main
  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    # Optionnel: Si vous avez un serveur de déploiement, ajoutez les étapes ici
    - name: Deploy to production
      run: echo "Déploiement en production - Simulation"
      
    - name: Notify deployment success
      run: |
        echo "Application déployée avec succès!"
        echo "Version: $(date +%Y%m%d-%H%M%S)" 