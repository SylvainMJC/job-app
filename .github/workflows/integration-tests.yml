name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Permet de déclencher manuellement le workflow
  workflow_dispatch:

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    
    # Configurer Docker-in-Docker
    services:
      dind:
        image: docker:dind
        options: --privileged
        ports:
          - 2375:2375
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x ./backend/gradlew
    
    # Configuration de Docker pour Testcontainers
    - name: Set up Docker
      run: |
        docker info
        # Assurez-vous que Testcontainers peut se connecter à Docker
        echo "TESTCONTAINERS_HOST_OVERRIDE=localhost" >> $GITHUB_ENV
    
    # Exécuter uniquement les tests d'intégration
    - name: Run integration tests
      run: cd backend && ./gradlew integrationTest
    
    # Publier les résultats des tests d'intégration
    - name: Publish Integration Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: backend/build/test-results/integrationTest/**/*.xml
    
    # Optionnel: Générer et publier le rapport JaCoCo pour les tests d'intégration
    - name: Generate JaCoCo Integration Test Report
      run: cd backend && ./gradlew jacocoTestReport -PjacocoTestFile=integrationTest
      if: success() || failure()  # Générer même en cas d'échec des tests
    
    - name: Upload JaCoCo Integration Test Report
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: jacoco-integration-report
        path: backend/build/reports/jacoco/ 